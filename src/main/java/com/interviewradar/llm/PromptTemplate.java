package com.interviewradar.llm;

public enum PromptTemplate {

    // 1. 问题抽取模板
    QUESTION_EXTRACTION("""
            你是“面试官提问抽取专家”。 \s
            输入：一段面经原文，可能含面试官提问、面试者回答、自述感受、流程说明、寒暄等。 \s
            任务：**只抽取真正的“面试官提问”**，输出 JSON：
            
            {
              "questions": [
                "问题1",
                "问题2",
                …
              ]
            }
            
            提取规则：
            1. **只保留开放式或命令式提问**，如“解释…”、“如何设计…”、“请…”； \s
            2. **剔除所有非技术性或无实质内容的陈述**，包括： \s
               - 面试者感受／情绪（“紧张得要死”） \s
               - 流程说明／安排（“后三轮由 HR 进行”） \s
               - 纯个人背景或待遇询问（“自我介绍”、“你家乡在哪？”、“薪资能接受多少？”） \s
               - 寒暄、废话、啰嗦修饰（“很简单啦”、“巴拉巴拉”） \s
            3. **合并 & 清理**： \s
               - 将语义相关的多条子问题合并为一句（如“线程池参数”“拒绝策略”→“线程池参数与拒绝策略”） \s
               - 删除口语冗词，仅保留核心关键词和逻辑 \s
            4. **严格输出**： \s
               - 仅返回上述 JSON，不要编号、不要问号、不要多余字段或说明 \s
               - 保持中文原句式，必要时补全“请”字
            
            示例 \s
            正例（应提取）：
            - 解释哈希表的实现原理与时间复杂度 \s
            - 如何手写二叉树的中序/前序/后序遍历 \s
            - 设计一个支持并发读写的缓存系统 \s
            - 讲解 Java 内存模型及其与多线程的关系 \s
            - 描述数据库索引的种类及其工作原理 \s
            - 什么是死锁？如何检测并解决死锁问题？ \s
            - CAP 理论是什么？在分布式系统中如何权衡？ \s
            - 解释 TCP 三次握手与四次挥手的完整流程 \s
            - 如何实现对高并发场景友好的消息队列？ \s
            - 请实现线程安全的单例模式并说明要点 \s
            
            负例（不应提取）：
            - 我感觉这家公司氛围很好 \s
            - 面试者：我准备了很久才来这里 \s
            - 安排一下后续面试流程吧 \s
            - 最后有其他问题吗？（HR 反问，不是技术提问） \s
            - 你家乡在哪里？你接受加班吗？ \s
            - 这个问题很简单，你能回答一下吗？ \s
            
            现在，请根据以上规则和示例，处理下面这段面经原文，直接返回仅含 `questions` 数组的 JSON： \s
            {{rawInterview}}
    """),

    // 2. 问题分类模板
    QUESTION_CLASSIFICATION("""
你是一个面试题分类助手，擅长根据题意从指定分类中找出最匹配的分类编号（可多选）。

请对下面共 ${n} 条面试题逐一分析，从下方“分类列表”中为每道题选择最贴切的分类编号。你只需返回一个 JSON 数组，每一项包含该题的序号和匹配的分类编号列表。

输出格式要求（必须严格遵守）：
[
  {"index":1,"categories":[分类编号A, 分类编号B]},
  {"index":2,"categories":[分类编号C]},
  ...
]

🔹说明：
- `index` 表示问题在列表中的序号，从 1 开始。
- `categories` 为选中的分类编号列表，至少一个，可多选。
- 不要输出任何解释、备注或多余文字，仅返回 JSON。

分类列表（编号 → 名称（说明））：
${categories}

面试题列表：
1.{questionText1}
2.{questionText2}
…
N.{questionTextN}
    """),


    // 3. 知识点抽取模板
    KNOWLEDGE_EXTRACTION("""
      你是一个面试题知识点抽取助手。
      给定一条已分类的面试问题，请结合其分类上下文，从已有知识点库中提取相关知识点名称。
      如果提取的知识点不在已有库中，也请输出。

      问题文本：
      {questionText}
      已选分类：{categoryName}

      输出格式为 JSON 数组，例如 ["事务隔离级别", "MVCC"]。
    """),

    ;

    private final String template;
    PromptTemplate(String template) { this.template = template; }
    public String getTemplate() { return template; }
}
